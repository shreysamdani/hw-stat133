#     }
#     hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
names(hashtagLengths) <- 0:(length(hashtagLengths)-1)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords)
lengthIndices = nchar(grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T))
if (sum(lengthIndices) == 1) {
print(tweetWords)
}
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
# # create a table of frequncies for hashtag lengths
# for (j in whichTags) {
#     index <- length((tweetWords[j]) - 1
#     if (index == 1) {
#       print(tweetWords[j])
#     }
#     hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
names(hashtagLengths) <- 0:(length(hashtagLengths))
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords)
lengthIndices = nchar(grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T))
if (sum(lengthIndices) == 1) {
print(tweetWords)
}
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
# # create a table of frequncies for hashtag lengths
# for (j in whichTags) {
#     index <- length((tweetWords[j]) - 1
#     if (index == 1) {
#       print(tweetWords[j])
#     }
#     hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords)
lengthIndices = nchar(grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T)) - 1
if (sum(lengthIndices) == 1) {
print(tweetWords)
}
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
# # create a table of frequncies for hashtag lengths
# for (j in whichTags) {
#     index <- length((tweetWords[j]) - 1
#     if (index == 1) {
#       print(tweetWords[j])
#     }
#     hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T)
# find the lengths of the
lengthIndices = nchar(whichTags) - 1
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
# # create a table of frequncies for hashtag lengths
# for (j in whichTags) {
#     index <- length((tweetWords[j]) - 1
#     if (index == 1) {
#       print(tweetWords[j])
#     }
#     hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
a <- 1:4
a
names(a) <- 1:4
b <- 1:3
names(b) <- 1:3
a+b
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T)
# find the lengths of the
lengthIndices = nchar(whichTags) - 1
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
hashtags
names(hashtagLengths) <- 1:(length(hashtagLengths))
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T)
# find the lengths of the
lengthIndices = nchar(whichTags) - 1
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
# open up the hashtags list
# hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
barplot(hashCounts)
hashtagLengths
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*$", tweetWords, value = T)
# find the lengths of the hashtags
lengthIndices = nchar(whichTags) - 1
# add to the table length
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
# mentions = unlist(mentions)
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
mentions = unlist(mentions)
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
grep("#[A-Za-z][A-Za-z0-9]*$", "#asdklfaskmdf")
grep("#[A-Za-z][A-Za-z0-9]*$", "#asdklfaskmdf")
grep("#[A-Za-z][A-Za-z0-9]*$", "#liesgirlstel")
grep("#[A-Za-z][A-Za-z0-9]*$", "#9liesgirlstel")
grep("#[A-Za-z][A-Za-z0-9]*$", "#9")
grep("#[A-Za-z][A-Za-z0-9]*$", "#s")
summary(menCounts)
summary(mentions)
table(length(grep("@[A-Za-z0-9_]{1,15}$", str_split(content, " ")[[1]])))
hashtag_count <- str_count(as.character(text_emotion$content), "#[[:alpha:]][[:alnum:]]*")
hashtag_count <- str_count(as.character(content), "#[[:alpha:]][[:alnum:]]*")
hashtag_count
table(hashtag_count)
barplot(table(hashtag_count))
hashtags <- unlist(lapply(str_extract_all(as.character(text_emotion$content), "#[[:alpha:]][[:alnum:]]*"), function(x) if (length(x) == 0) NULL else x[[1]]))
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*", tweetWords, value = T)
# find the lengths of the hashtags
lengthIndices = nchar(whichTags) - 1
# add to the table length
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
grep("#[A-Za-z][A-Za-z0-9]*", "#asdfdsf", value = T)
grep("#[A-Za-z][A-Za-z0-9]*", "#asdfdsf)", value = T)
grep("#[A-Za-z][A-Za-z0-9]*", "#asdfdsf) #asdff", value = T)
grep("#[A-Za-z][A-Za-z0-9]*", "#asdfdsf) #asdff", value = T)
str_count(as.character("#asdfdsf) #asdff"), "#[[:alpha:]][[:alnum:]]*")
str_count(as.character("#asdfdsf// #asdff"), "#[[:alpha:]][[:alnum:]]*")
str_count(as.character("#asdfdsf// #asdff"), "#[[:alpha:]][[:alnum:]]*$")
str_count(as.character("#asdfdsf #asdff"), "#[[:alpha:]][[:alnum:]]*$")
hashtag_count <- str_count(as.character(content), "#[[:alpha:]][[:alnum:]]*")
hashtag_count
table(hashtag_count)
barplot(table(hashtag_count))
hashtags <- unlist(lapply(str_extract_all(as.character(content), "#[[:alpha:]][[:alnum:]]*"), function(x) if (length(x) == 0) NULL else x[[1]]))
hashtags
hashtag_lengths <- str_count(hashtags) - 1
hashtag_lengths
summary(hashtag_lengths)
#average length of the hashtags
7.714
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#most common length
Mode(hashtag_lengths)
hashtag_count <- str_count(as.character(content), "#[[:alpha:]][[:alnum:]]*")
table(hashtag_count)
barplot(table(hashtag_count))
hashtags <- unlist(lapply(str_extract_all(as.character(content), "#[[:alpha:]][[:alnum:]]*"), function(x) if (length(x) == 0) NULL else x[[1]]))
hashtags
hashtag_lengths <- str_count(hashtags) - 1
hashtag_lengths
summary(hashtag_lengths)
#average length of the hashtags
7.714
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#most common length
Mode(hashtag_lengths)
hashtag_count <- str_count(as.character(content), "#[[:alpha:]][[:alnum:]]*")
table(hashtag_count)
barplot(table(hashtag_count))
hashtags <- unlist(lapply(str_extract_all(as.character(content), "#[[:alpha:]][[:alnum:]]*"), function(x) if (length(x) == 0) NULL else x[[1]]))
#hashtags
hashtag_lengths <- str_count(hashtags) - 1
#hashtag_lengths
summary(hashtag_lengths)
#average length of the hashtags
7.714
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#most common length
Mode(hashtag_lengths)
(650+66*2+3*17+5+7+8+27)/(650+17+6)
(650+66*2+3*17+5+7+8+27)/(650+17+6+66)
sum(hashtags*as.numeric(names(hashtags))/sum(hashtags))
sum(hashCounts*as.numeric(names(hashCounts))/sum(hashCounts))
hashcounts
hashCounts
hashCounts = hashCounts[2:7]
sum(hashCounts*as.numeric(names(hashCounts))/sum(hashCounts))
hashCounts
hashCounts*as.numeric(names(hashCounts))
sum((hashCounts*as.numeric(names(hashCounts))+27)/sum(hashCounts))
sum((hashCounts*as.numeric(names(hashCounts))+27)/(3+sum(hashCounts)))
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*", tweetWords, value = T)
# find the lengths of the hashtags
lengthIndices = nchar(whichTags) - 1
# add to the table length
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
hashCounts = hashCounts[2:8]
hashCounts
sum(hashCounts*as.numeric(names(hashCounts))/sum(hashCounts))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[()[]]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\(\)\[\]]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[(\)\[\]]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[()\[\]]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[(\[]]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("(\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[(\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[(\\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\\(\\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\\|(\\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\\|(\\[]+@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 1]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\\|(\\[]?@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 1]
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = length(grep("[\\|(\\[]?@[A-Za-z0-9_]{1,15}$", str_split(content[i], " ")[[1]]))
}
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# find the hashtags
whichTags = grep("#[A-Za-z][A-Za-z0-9]*", tweetWords, value = T)
# find the lengths of the hashtags
lengthIndices = nchar(whichTags) - 1
# add to the table length
hashtagLengths[lengthIndices] = hashtagLengths[lengthIndices] + 1
# count how many hashtags there are
hashtags[i] = length(whichTags)
}
names(hashtagLengths) <- 1:(length(hashtagLengths))
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
#avg length of hashtags
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
