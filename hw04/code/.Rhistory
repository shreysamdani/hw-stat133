}
hashtags = unlist(hashtags)
counts = table(hashtags)
#hashtagLengths
counts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = 1:length(content)
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
print(tweetWords[whichTags])
#hashtagLengths[i] = nchar(tweetWords[whichTags])
}
hashtags = unlist(hashtags)
counts = table(hashtags)
#hashtagLengths
counts
barplot(counts)
mean(hashtags)
str_split(content[1], " ")[[1]]
tweetWords = str_split(content[1], " ")[[1]]
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
whichTags
tweetWords[whichTags]
c(tweetWords)
c(tweetWords)[whichTags]
c(tweetWords)[c(whichTags)]
knitr::opts_chunk$set(echo = T, error = T, fig.path = 'images/')
source("../code/archive-functions.R")
raw_data <- read_archive('stringr')
clean_data <- clean_archive(raw_data)
write.csv(clean_data, file = "../data/stringr-archive.csv" )
plot_archive(clean_data)
facetedData = data.frame()
packages = c("ggplot2", "XML", "knitr", "dplyr")
for (package in packages) {
raw_data <- read_archive(package)
clean_data <- clean_archive(raw_data)
write.csv(clean_data, file = paste0("../data/",package,"-archive.csv" ))
clean_data$type = package
facetedData <- rbind(facetedData, clean_data)
}
ggplot(data = facetedData, aes(x = date, y = size, color = type)) +
geom_step() +
labs(y = 'Size (KB)')
ggplot(data = facetedData, aes(x = date, y = size, color = type)) +
geom_step() +
labs(y = 'Size (KB)') +
facet_wrap(~ type, scales = 'free')
source("../code/regex-functions.R")
split_chars('Go Bears!')
split_chars('Expecto Patronum')
vec <- c('G', 'o', ' ', 'B', 'e', 'a', 'r', 's', '!')
num_vowels(vec)
count_vowels("The quick brown fox jumps over the lazy dog")
count_vowels("THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG")
reverse_chars("gattaca")
reverse_chars("Lumox Maxima")
reverse_words("sentence! this reverse")
reverse_words("string")
content = read.csv("../data/text-emotion.csv", stringsAsFactors = F)$content
counts = nchar(content)
print(summary(counts))
hist(counts, breaks = seq(0, max(counts)+5, by=5))
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = sum(grepl("^@[A-Za-z0-9_]{1,15}", str_split(content[i], " ")[[1]]))
}
mentions = unlist(mentions)
menCounts = table(mentions)
barplot(counts)
menCounts
content[mentions == 10]
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
print(tweetWords[whichTags])
#hashtagLengths[i] = nchar(tweetWords[whichTags])
}
hashtags = unlist(hashtags)
hashCounts = table(hashtags)
#hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
tail(contents)
tail(content)
tail(content, -1)
tail(tail(content, -1))
tail(content, -1)
tail(content, 0)
head(content)
tail(c(1,2,3),-1)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in length(whichTags)) {
index <- nchars(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
content
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
# for (j in length(whichTags)) {
#   index <- nchars(tweetWords[j])*whichTags[j]
#   hashtagLengths[index] = hashtagLengths[index] + 1
# }
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in length(whichTags)) {
index <- nchars(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
index <- nchars(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
index <- nchars(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
# hashCounts
# barplot(counts)
# mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
print(hashtagLengths)
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
index <- nchars(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
# hashCounts
# barplot(counts)
# mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
print(hashtagLengths)
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
index <- nchar(tweetWords[j])*whichTags[j]
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
# get rid of 0 length hashtags and lenghts of hashtags that do not exist
hashtagLengths <- tail(hashtagLengths[hashtagLengths > 0],-1)
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
# hashCounts
# barplot(counts)
# mean(hashtags)
a
c(1)[0]
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
print(hashtagLengths)
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
# get rid of 0 length hashtags
hashtagLengths <- tail(hashtagLengths,-1)
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
if (index == 1) {
print(tweetWords[j])
}
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
# get rid of 0 length hashtags
hashtagLengths <- tail(hashtagLengths,-1)
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
if (index == 1) {
print(tweetWords)
}
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
# get rid of 0 length hashtags
hashtagLengths <- tail(hashtagLengths,-1)
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
if (index == 1) {
print(tweetWords)
}
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
if (index == 2) {
print(tweetWords)
}
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
hashtagLengths
hashCounts
barplot(counts)
mean(hashtags)
mentions = 1:length(content)
for (i in mentions) {
mentions[i] = sum(grepl("^@[A-Za-z0-9_]{1,15}", str_split(content[i], " ")[[1]]))
}
mentions = unlist(mentions)
menCounts = table(mentions)
barplot(menCounts)
menCounts
content[mentions == 10]
c(1,2,3)*c(1,2,3)
# total hashtags in each tweet
hashtags = 1:length(content)
# lengths of hashtags in each tweet
hashtagLengths = rep(0,max(counts))
for (i in hashtags) {
# split up the tweet into words
tweetWords = str_split(content[i], " ")[[1]]
# mark which words are hashtags
whichTags = grepl("^#[A-Za-z][A-Za-z0-9]*", tweetWords)
# count how many hashtags there are
hashtags[i] = sum(whichTags)
# create a table of frequncies for hashtag lengths
for (j in 1:length(whichTags)) {
if (whichTags[j]) {
index <- nchar(tweetWords[j])
hashtagLengths[index] = hashtagLengths[index] + 1
}
}
}
names(hashtagLengths) <- 1:length(hashtagLengths)
hashtagLengths <- hashtagLengths[hashtagLengths > 0]
# open up the hashtags list
hashtags = unlist(hashtags)
# get the frequencies of the number of hashtags in a tweet
hashCounts = table(hashtags)
#frequencies of counts
hashCounts
barplot(hashCounts)
#avg length of hashtags
sum(hashtagLengths*names(hashtagLengths)/sum(hashtagLengths))
#mode of the length
names(hashtagLengths[hashtagLengths == max(hashtagLengths)])
hashtagLengths*names(hashtagLengths)
names(hashtagLengths)
sum(hashtagLengths*as.numeric(names(hashtagLengths))/sum(hashtagLengths))
